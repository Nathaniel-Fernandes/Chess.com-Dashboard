[{"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\index.js":"1","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\App.js":"2","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\Initialize.js":"3","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\State\\store.js":"4","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\urls.js":"5","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\helpers.js":"6","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\LoadForm.js":"7","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\Analyze.js":"8","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\AnalyzeHelpers.js":"9","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\AnalysisMetrics.js":"10","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\RecordPrototypes.js":"11","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\fen.js":"12","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Opening\\opening.js":"13","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Opening\\Sunburst_ECO.js":"14","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Moves\\Histogram_MovePly.js":"15","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Opening\\Barchart_Openings.js":"16","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\ResponsiveHistogram.js":"17","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\NameHeader.js":"18","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Game\\Pie_Loss.js":"19","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\ResponsivePie.js":"20","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Game\\Pie_Results.js":"21","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Game\\Scatter_CAPS.js":"22","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\ResponsiveScatterPlot.js":"23","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Game\\Histogram_CAPS.js":"24","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Moves\\Histogram_MoveTime.js":"25","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Tactics\\Barchart_Tactics.js":"26","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Tactics\\Barchart_TacticsPhases.js":"27","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table_Tactics.js":"28","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table_Game.js":"29","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table.js":"30","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table_Openings.js":"31","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table_Move.js":"32","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\ChartContainer.js":"33","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\Chart.js":"34","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\ChartSidebar.js":"35","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\ChartTabs.js":"36","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\Table.js":"37","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\UsernameForm.js":"38","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\usePortal.js":"39","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Portal.js":"40","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\Card.js":"41","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\ChesscomLogin.js":"42","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\TermsForm.js":"43","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\PopupBlocker.js":"44","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\AnalysisProgress.js":"45"},{"size":202,"mtime":1608225211824,"results":"46","hashOfConfig":"47"},{"size":798,"mtime":1609528050096,"results":"48","hashOfConfig":"47"},{"size":4326,"mtime":1609529472504,"results":"49","hashOfConfig":"47"},{"size":3894,"mtime":1609526551156,"results":"50","hashOfConfig":"47"},{"size":560,"mtime":1609536527372,"results":"51","hashOfConfig":"47"},{"size":3284,"mtime":1609528902096,"results":"52","hashOfConfig":"47"},{"size":450,"mtime":1607486841061,"results":"53","hashOfConfig":"47"},{"size":1103,"mtime":1609528850153,"results":"54","hashOfConfig":"47"},{"size":9686,"mtime":1609537169105,"results":"55","hashOfConfig":"47"},{"size":11653,"mtime":1609528839959,"results":"56","hashOfConfig":"47"},{"size":3408,"mtime":1608145525206,"results":"57","hashOfConfig":"47"},{"size":692,"mtime":1607886954037,"results":"58","hashOfConfig":"47"},{"size":2497,"mtime":1609538052372,"results":"59","hashOfConfig":"47"},{"size":2973,"mtime":1609537971905,"results":"60","hashOfConfig":"47"},{"size":2083,"mtime":1608269245262,"results":"61","hashOfConfig":"47"},{"size":5047,"mtime":1609537670620,"results":"62","hashOfConfig":"47"},{"size":336,"mtime":1608268494627,"results":"63","hashOfConfig":"47"},{"size":277,"mtime":1608430818909,"results":"64","hashOfConfig":"47"},{"size":1412,"mtime":1608228102644,"results":"65","hashOfConfig":"47"},{"size":2662,"mtime":1609538119954,"results":"66","hashOfConfig":"47"},{"size":4337,"mtime":1609536455647,"results":"67","hashOfConfig":"47"},{"size":1277,"mtime":1608250714219,"results":"68","hashOfConfig":"47"},{"size":2383,"mtime":1609536600161,"results":"69","hashOfConfig":"47"},{"size":1303,"mtime":1608250626871,"results":"70","hashOfConfig":"47"},{"size":2011,"mtime":1608250701948,"results":"71","hashOfConfig":"47"},{"size":3879,"mtime":1609536580770,"results":"72","hashOfConfig":"47"},{"size":3526,"mtime":1609536586577,"results":"73","hashOfConfig":"47"},{"size":1460,"mtime":1609536690362,"results":"74","hashOfConfig":"47"},{"size":1863,"mtime":1608567786308,"results":"75","hashOfConfig":"47"},{"size":2419,"mtime":1609536697654,"results":"76","hashOfConfig":"47"},{"size":2493,"mtime":1609536682358,"results":"77","hashOfConfig":"47"},{"size":4168,"mtime":1608568773852,"results":"78","hashOfConfig":"47"},{"size":863,"mtime":1609538200969,"results":"79","hashOfConfig":"47"},{"size":3201,"mtime":1608429847652,"results":"80","hashOfConfig":"47"},{"size":3849,"mtime":1608429947063,"results":"81","hashOfConfig":"47"},{"size":534,"mtime":1608567500155,"results":"82","hashOfConfig":"47"},{"size":744,"mtime":1608430686427,"results":"83","hashOfConfig":"47"},{"size":5022,"mtime":1609536665268,"results":"84","hashOfConfig":"47"},{"size":2843,"mtime":1609536718637,"results":"85","hashOfConfig":"47"},{"size":369,"mtime":1608674276612,"results":"86","hashOfConfig":"47"},{"size":4174,"mtime":1609527773852,"results":"87","hashOfConfig":"47"},{"size":2947,"mtime":1609538217369,"results":"88","hashOfConfig":"47"},{"size":2903,"mtime":1609537285327,"results":"89","hashOfConfig":"47"},{"size":2953,"mtime":1609536649767,"results":"90","hashOfConfig":"47"},{"size":2655,"mtime":1609537392103,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"gju65z",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\index.js",[],["191","192"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\App.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\Initialize.js",["193"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\State\\store.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\urls.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\helpers.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\LoadForm.js",["194"],"import React, { useState } from 'react';\r\nimport { store } from '../State/store';\r\n\r\nconst LoadForm = () => {\r\n    const [uname, setUname] = useState(\"\");\r\n\r\n    <form>\r\n        <input \r\n            type=\"text\" \r\n            value={uname} \r\n            onChange ={(e) => setUname(e.targe.value)} \r\n            placeholder=\"Player Name\" \r\n            name=\"username\"></input>\r\n        <button>Submit</button>\r\n\t</form>\r\n}\r\n\r\nexport default LoadForm;\r\n",["195","196"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\Analyze.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\AnalyzeHelpers.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\AnalysisMetrics.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\RecordPrototypes.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\fen.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Opening\\opening.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Opening\\Sunburst_ECO.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Moves\\Histogram_MovePly.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Opening\\Barchart_Openings.js",["197"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\ResponsiveHistogram.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\NameHeader.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Game\\Pie_Loss.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\ResponsivePie.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Game\\Pie_Results.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Game\\Scatter_CAPS.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\ResponsiveScatterPlot.js",["198"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Game\\Histogram_CAPS.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Moves\\Histogram_MoveTime.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Tactics\\Barchart_Tactics.js",["199","200"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Charts\\Tactics\\Barchart_TacticsPhases.js",["201","202"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table_Tactics.js",["203"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table_Game.js",["204"],"import React, { useState, useEffect } from 'react'\r\nimport { store } from '../State/store'\r\nimport Table, { renderLink } from './Table'\r\n\r\nconst columns = [    \r\n    {field: 'date'},\r\n    {field: 'gameID', cellRenderer: renderLink},\r\n    {field: 'result',filter: true,},\r\n    {field: 'opponent',filter: true,},\r\n    {field: 'color',filter: true,},\r\n    {field: 'eco',headerName:\"ECO\",filter: true,},\r\n    {field: 'caps', headerName:\"CAPS Score\"},\r\n    {field: 'blunders', headerName: 'Blunders'},\r\n    {field: 'mistakes', headerName: 'Mistakes'},\r\n    {field: 'inaccuracies', headerName: 'Inaccuracies'}\r\n]\r\nconst Table_Game = () => {\r\n    const [rows, setRows] = useState([])\r\n\r\n    const Games = store(state => state.Games)\r\n    const Openings = store(state => state.opening)\r\n    const blunders = store(state => state.blunder)\r\n    const mistakes = store(state => state.mistake)\r\n    const inaccuracy = store(state => state.inaccuracy)\r\n\r\n    useEffect(() => {\r\n        // console.log(Openings)\r\n        const t = Games.map((e, i) => {\r\n            // console.log(Openings.filter(obj => obj.id === e.id))\r\n            return {\r\n                date: e.date.split(\" \")[0],\r\n                gameID: e.id,\r\n                result: e.result === \"win\" ? \"Won\" : \"Lost\",\r\n                opponent: e.opponent,\r\n                color:e.color,\r\n                eco: Openings.filter(obj => obj.id === e.id)?.[0]?.eco,\r\n                caps: e?.CAPS?.toFixed(1),\r\n                blunders: blunders.filter(obj => obj.id === e.id).length,\r\n                mistakes: mistakes.filter(obj => obj.id === e.id).length,\r\n                inaccuracies: inaccuracy.filter(obj => obj.id === e.id).length\r\n            }\r\n        })\r\n\r\n        setRows(() => t)\r\n    }, [Games])\r\n\r\n    return (\r\n        <Table customCol={columns} data={rows} />\r\n    )\r\n}\r\n\r\nexport default Table_Game","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table_Openings.js",["205","206","207"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Tables\\Table_Move.js",["208","209","210","211"],"import React, { useState, useEffect } from 'react'\r\nimport { store } from '../State/store'\r\nimport Table, { renderLink } from './Table'\r\n\r\nconst columns = [    \r\n    {field: 'date'},\r\n    {field: 'gameID', cellRenderer: renderLink},\r\n    {field: 'type'},\r\n    {field: 'phase', filter: 'Phase'},\r\n    {field: 'move', filter: 'Move'},\r\n    {field: 'ply', filter: 'Move'},\r\n    {field: 'timeLeft', filter: 'Time Left (s)'},\r\n    {field: 'timeLeftPercent', filter: 'Time Left (%)'},\r\n    {field: 'fen', width: 190},\r\n    {field: 'result',filter: true,},\r\n    {field: 'opponent',filter: true,},\r\n    {field: 'color',filter: true,},\r\n    {field: 'eco',headerName:\"ECO\",filter: true,},\r\n    {field: 'caps', headerName:\"CAPS Score\"},\r\n]\r\n\r\nconst Table_Game = () => {\r\n    const [rows, setRows] = useState([])\r\n\r\n    // const Games = store(state => state.Games)\r\n    const blunders = store(state => state.blunder)\r\n    const mistakes = store(state => state.mistake)\r\n    const inaccuracy = store(state => state.inaccuracy)\r\n\r\n    useEffect(() => {\r\n        console.log(blunders)\r\n        const t = []\r\n\r\n        blunders.map(e => {\r\n            t.push(\r\n                {\r\n                    date: e.date.split(\" \")[0],\r\n                    type: 'Blunder',\r\n                    fen: e.fen,\r\n                    phase: e.phase,\r\n                    move: Math.ceil(e.ply / 2),\r\n                    ply: e.ply,\r\n                    timeLeft: e?.timeToThink?.toFixed(1),\r\n                    timeLeftPercent: e?.timeToThinkPercent?.toFixed(1),\r\n                    gameID: e.id,\r\n                    result: e.won ? \"Won\" : \"Lost\",\r\n                    eco:e.eco,\r\n                    color:e.color,\r\n                    opponent: e.opponent,\r\n                    caps: e.CAPS.toFixed(1)\r\n                }\r\n            )\r\n        })\r\n\r\n        mistakes.map(e => {\r\n            t.push(\r\n                {\r\n                    date: e.date.split(\" \")[0],\r\n                    type: 'Mistake',\r\n                    fen: e.fen,\r\n                    phase: e.phase,\r\n                    move: Math.ceil(e.ply / 2),\r\n                    ply: e.ply,\r\n                    timeLeft: e?.timeToThink?.toFixed(1),\r\n                    timeLeftPercent: e?.timeToThinkPercent?.toFixed(1),\r\n                    gameID: e.id,\r\n                    result: e.won ? \"Won\" : \"Lost\",\r\n                    eco:e.eco,\r\n                    color:e.color,\r\n                    opponent: e.opponent,\r\n                    caps: e.CAPS.toFixed(1)\r\n                }\r\n            )\r\n        })\r\n\r\n        inaccuracy.map(e => {\r\n            t.push(\r\n                {\r\n                    date: e.date.split(\" \")[0],\r\n                    type: 'Inaccuracy',\r\n                    fen: e.fen,\r\n                    phase: e.phase,\r\n                    move: Math.ceil(e.ply / 2),\r\n                    ply: e.ply,\r\n                    timeLeft: e?.timeToThink?.toFixed(1),\r\n                    timeLeftPercent: e?.timeToThinkPercent?.toFixed(1),\r\n                    gameID: e.id,\r\n                    result: e.won ? \"Won\" : \"Lost\",\r\n                    eco:e.eco,\r\n                    color:e.color,\r\n                    opponent: e.opponent,\r\n                    caps: e.CAPS.toFixed(1)\r\n                }\r\n            )\r\n        })\r\n\r\n        setRows(() => t)\r\n    }, [])\r\n\r\n    return (\r\n        <Table customCol={columns} data={rows} />\r\n    )\r\n}\r\n\r\nexport default Table_Game\r\n\r\n\r\n\r\n// useEffect(() => {\r\n//     console.log(tactics)\r\n//     const t = tactics.map((e, i) => {\r\n//         return {\r\n//             date: e.date.split(\" \")[0],\r\n//             name: e.type.name,\r\n//             phase: e.phase,\r\n//             move: Math.ceil(e.ply / 2),\r\n//             ply: e.ply,\r\n//             timeLeft: e.timeToThink.toFixed(1),\r\n//             timeLeftPercent: e.timeToThinkPercent.toFixed(1),\r\n//             gameID: e.id,\r\n//             result: e.won ? \"Won\" : \"Lost\",\r\n//             eco:e.eco,\r\n//             color:e.color,\r\n//             opponent: e.opponent,\r\n//             class: e.class,\r\n//             caps: e.CAPS.toFixed(1)\r\n//         }\r\n//     })\r\n\r\n//     setRows(() => t)\r\n// }, [])","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\ChartContainer.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\Chart.js",["212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"import React from 'react'\r\nimport AutoSizer from 'react-virtualized-auto-sizer'\r\nimport Game_Pie_Loss from '../Charts/Game/Pie_Loss'\r\nimport Game_Pie_Results from '../Charts/Game/Pie_Results'\r\nimport Game_Scatter_CAPS from '../Charts/Game/Scatter_CAPS'\r\nimport Game_Histogram_CAPS from '../Charts/Game/Histogram_CAPS'\r\nimport Move_Histogram_Ply from '../Charts/Moves/Histogram_MovePly'\r\nimport Move_Histogram_Time from '../Charts/Moves/Histogram_MoveTime'\r\nimport Opening_Data from '../Charts/Opening/opening'\r\nimport Tactics_Barchart from '../Charts/Tactics/Barchart_Tactics'\r\nimport Tactics_Barchart_Phases from '../Charts/Tactics/Barchart_TacticsPhases'\r\n\r\n/*\r\n    1. game_pie_loss, game_pie_results, game_scatter_caps, game_histogram_caps, \r\n    move_histogram_ply, move_histogram_time, opening_data_barchart, opening_data_sunburst, \r\n    tactics_barchart, tactics_barchart_phases\r\n*/\r\n\r\nconst Chart = ({ chart }) => {\r\n    const styles = {width: '100%'}\r\n\r\n    // console.log(chartObj[chart])\r\n    return (\r\n        <div className=\"main-chart\">\r\n            <AutoSizer style={styles}>\r\n                {\r\n                    ({height, width}) => {\r\n                        if(chart === \"game_pie_loss\") return <Game_Pie_Loss width={width} height={height} />;\r\n                        if(chart === \"game_pie_results\") return <Game_Pie_Results width={width} height={height} />\r\n                        if(chart === \"game_scatter_caps\") return <Game_Scatter_CAPS width={width} height={height} />\r\n                        if(chart === \"game_histogram_caps\") return <Game_Histogram_CAPS width={width} height={height} />\r\n                        if(chart === \"move_histogram_ply_blunder\") return <Move_Histogram_Ply width={width} height={height} type=\"blunder\" x=\"percent\"/>\r\n                        if(chart === \"move_histogram_ply_mistake\") return <Move_Histogram_Ply width={width} height={height} type=\"mistake\" x=\"percent\"/>\r\n                        if(chart === \"move_histogram_ply_inaccuracy\") return <Move_Histogram_Ply width={width} height={height} type=\"inaccuracy\" x=\"percent\"/>\r\n                        if(chart === \"move_histogram_time_blunder\") return <Move_Histogram_Time width={width} height={height} type=\"blunder\"/>\r\n                        if(chart === \"move_histogram_time_mistake\") return <Move_Histogram_Time width={width} height={height} type=\"mistake\"/>\r\n                        if(chart === \"move_histogram_time_inaccuracy\") return <Move_Histogram_Time width={width} height={height} type=\"inaccuracy\"/>\r\n                        if(chart === \"opening_data_barchart\") return <Opening_Data width={width} height={height} type=\"barchart\"  />\r\n                        if(chart === \"opening_data_sunburst\") return <Opening_Data width={width} height={height} type=\"sunburst\"  />\r\n                        if(chart === \"tactics_barchart\") return <Tactics_Barchart width={width} height={height} />\r\n                        if(chart === \"tactics_barchart_phases\") return <Tactics_Barchart_Phases width={width} height={height} />\r\n\r\n                        return null\r\n                    }\r\n                }\r\n             </AutoSizer> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\ChartSidebar.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\ChartTabs.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\Table.js",["226","227","228","229"],"import React from 'react';\r\nimport Table_Game from '../Tables/Table_Game'\r\nimport Table_Move from '../Tables/Table_Move'\r\nimport Table_Openings from '../Tables/Table_Openings'\r\nimport Table_Tactics from '../Tables/Table_Tactics'\r\n\r\nconst TableComponent = ({ chart }) => {\r\n    const type = chart.split(\"_\")[0].toLowerCase();\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"table-list-label\">Corresponding Data</h3>\r\n            { \r\n                (type === \"game\") ? <Table_Game /> :\r\n                (type === \"move\") ? <Table_Move /> :\r\n                (type === \"opening\") ? <Table_Openings /> :\r\n                (type === \"tactics\") ? <Table_Tactics /> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableComponent;","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\UsernameForm.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\usePortal.js",["230"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\Portal.js",["231"],"import React from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport usePortal from './usePortal'\r\n\r\nconst Portal = ({ rootRefID, children }) => {\r\n    console.log(rootRefID)\r\n    const target = usePortal(rootRefID)\r\n    // const target = document.getElementById(id)\r\n    return createPortal(\r\n        children,\r\n        target\r\n    )\r\n}\r\n\r\nexport default Portal","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\Card.js",["232","233"],"import React, { useState, useEffect } from 'react';\r\nimport UsernameForm from './UsernameForm'\r\nimport ChesscomLogin from './ChesscomLogin'\r\nimport TermsForm from './TermsForm'\r\nimport PopupBlocker from './PopupBlocker'\r\nimport Portal from '../Portal'\r\n\r\n\r\nconst FormCard = () => {\r\n    const [page, setPage] = useState(0)\r\n\r\n\tconst [popupBlocker, setPopupBlocker] = useState(null);\r\n    const [timesTested, setTimesTested] = useState(0)\r\n    const [testing, setTesting] = useState(false)\r\n\r\n\r\n    useEffect(async () => {\r\n        if(timesTested !== 0) {\r\n            setTesting(true)\r\n\r\n            await new Promise(res => setTimeout(() => res(1),3000)) \r\n\r\n            testPopup(setPopupBlocker)\r\n            setTesting(false)\r\n        }\r\n\t\t// t.close();\r\n    }, [timesTested])\r\n\r\n\r\n    return (\r\n        <Portal rootRefID=\"modal-root-form\">\r\n            { \r\n                (page === 0) ? <UsernameForm setPage={setPage} /> :\r\n                (page === 1) ? <ChesscomLogin setPage={setPage} /> : \r\n                (page === 2) ? <PopupBlocker \r\n                                    setPage={setPage} \r\n                                    popupBlocker={popupBlocker}\r\n                                    testPopup={setTimesTested}\r\n                                    timesTested={timesTested} \r\n                                    testing={testing}\r\n                                /> :\r\n                (page === 3) ? <TermsForm setPage={setPage} /> : null\r\n            }\r\n\r\n            <div className=\"form-page-counter\">\r\n                <div className={`${page === 0 ? \"selected\" : ''}`} />\r\n                <div className={`${page === 1 ? \"selected\" : ''}`} />\r\n                <div className={`${page === 2 ? \"selected\" : ''}`} />\r\n                <div className={`${page === 3 ? \"selected\" : ''}`} />\r\n            </div>\r\n        </Portal>\r\n    )\r\n}\r\n\r\nexport default FormCard;\r\n\r\nconst testPopup = async (setPopupBlocker) => {\r\n    // const t = await new Promise(resolve => setTimeout(() => resolve(window.open(\"\", \"_blank\")), 2500));\r\n    const t = window.open(\"\", '_blank');\r\n    try {\r\n        t.document.write(\"You are most likely good to go! Please close this tab and continue. (Popup opened by Chess Intellect)\")\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n\r\n    console.log(t)\r\n\r\n    let blocked = await popupBlockerChecker.check(t)\r\n    console.log(blocked)\r\n\r\n    if(blocked === undefined) {\r\n        if(t === null || t === undefined || !t) {\r\n            blocked = true\r\n        }\r\n    }\r\n\r\n    if (blocked === false) {\r\n        setPopupBlocker(false);\r\n    }\r\n    else if (blocked === true) {\r\n        setPopupBlocker(true)\r\n        return;\r\n    }\r\n    // t.close()\r\n}\r\n\r\nconst popupBlockerChecker = {\r\n    check: async function(popup_window) {\r\n        var scope = this;\r\n        \r\n        console.log(popup_window)\r\n        console.log(scope)\r\n\r\n        if (popup_window) {\r\n            if(/chrome/.test(navigator.userAgent.toLowerCase())) {\r\n                console.log('path 1')\r\n                \r\n                // return new Promise(resolve => {\r\n                    setTimeout(function () {\r\n                        // return resolve(scope.is_popup_blocked(scope, popup_window))\r\n                        return scope.is_popup_blocked(scope, popup_window)\r\n                    },200);\r\n                // })\r\n                \r\n            } else{\r\n                // console.log('path 2')\r\n                popup_window.onload = () => {\r\n                    // console.log('path 2.25')\r\n                   return scope.is_popup_blocked(scope, popup_window);\r\n                };\r\n            }\r\n\r\n            // console.log('path 2.5')\r\n        } else {\r\n            // console.log('path 3')\r\n            return scope.displayError();\r\n        }\r\n    },\r\n\r\n    is_popup_blocked: function(scope, popup_window) {\r\n        if ((popup_window.innerHeight > 0) == false){ \r\n            return scope.displayError();\r\n        }\r\n        // console.log('path 4')\r\n        return false;\r\n    },\r\n    displayError: function(){\r\n       alert(\"Popup Blocker is enabled! Please add this site to your exception list.\");\r\n       return true;\r\n    }\r\n};\r\n","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\ChesscomLogin.js",["234","235","236","237"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\TermsForm.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\PopupBlocker.js",["238","239"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\LoadingForms\\AnalysisProgress.js",["240","241"],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":103,"column":12,"nodeType":"248","messageId":"249","endLine":130,"endColumn":7},{"ruleId":"250","severity":1,"message":"251","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":15},{"ruleId":"242","replacedBy":"254"},{"ruleId":"244","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":68,"column":7,"nodeType":"258","endLine":68,"endColumn":9,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":73,"column":1,"nodeType":"262","messageId":"263","endLine":83,"endColumn":4},{"ruleId":"250","severity":1,"message":"264","line":22,"column":12,"nodeType":"252","messageId":"253","endLine":22,"endColumn":15},{"ruleId":"256","severity":1,"message":"265","line":46,"column":8,"nodeType":"258","endLine":46,"endColumn":10,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":29,"column":38,"nodeType":"248","messageId":"269","endLine":29,"endColumn":40},{"ruleId":"256","severity":1,"message":"265","line":46,"column":8,"nodeType":"258","endLine":46,"endColumn":10,"suggestions":"270"},{"ruleId":"256","severity":1,"message":"265","line":45,"column":8,"nodeType":"258","endLine":45,"endColumn":10,"suggestions":"271"},{"ruleId":"256","severity":1,"message":"272","line":45,"column":8,"nodeType":"258","endLine":45,"endColumn":15,"suggestions":"273"},{"ruleId":"267","severity":1,"message":"268","line":29,"column":29,"nodeType":"248","messageId":"269","endLine":29,"endColumn":31},{"ruleId":"267","severity":1,"message":"268","line":53,"column":33,"nodeType":"248","messageId":"269","endLine":53,"endColumn":35},{"ruleId":"256","severity":1,"message":"274","line":59,"column":8,"nodeType":"258","endLine":59,"endColumn":18,"suggestions":"275"},{"ruleId":"267","severity":1,"message":"268","line":34,"column":24,"nodeType":"248","messageId":"269","endLine":34,"endColumn":26},{"ruleId":"267","severity":1,"message":"268","line":55,"column":24,"nodeType":"248","messageId":"269","endLine":55,"endColumn":26},{"ruleId":"267","severity":1,"message":"268","line":76,"column":26,"nodeType":"248","messageId":"269","endLine":76,"endColumn":28},{"ruleId":"256","severity":1,"message":"276","line":98,"column":8,"nodeType":"258","endLine":98,"endColumn":10,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":28,"column":62,"nodeType":"280","endLine":28,"endColumn":109},{"ruleId":"278","severity":1,"message":"281","line":29,"column":65,"nodeType":"280","endLine":29,"endColumn":115},{"ruleId":"278","severity":1,"message":"282","line":30,"column":66,"nodeType":"280","endLine":30,"endColumn":117},{"ruleId":"278","severity":1,"message":"283","line":31,"column":68,"nodeType":"280","endLine":31,"endColumn":121},{"ruleId":"278","severity":1,"message":"284","line":32,"column":75,"nodeType":"280","endLine":32,"endColumn":153},{"ruleId":"278","severity":1,"message":"284","line":33,"column":75,"nodeType":"280","endLine":33,"endColumn":153},{"ruleId":"278","severity":1,"message":"284","line":34,"column":78,"nodeType":"280","endLine":34,"endColumn":159},{"ruleId":"278","severity":1,"message":"285","line":35,"column":76,"nodeType":"280","endLine":35,"endColumn":143},{"ruleId":"278","severity":1,"message":"285","line":36,"column":76,"nodeType":"280","endLine":36,"endColumn":143},{"ruleId":"278","severity":1,"message":"285","line":37,"column":79,"nodeType":"280","endLine":37,"endColumn":149},{"ruleId":"278","severity":1,"message":"286","line":38,"column":70,"nodeType":"280","endLine":38,"endColumn":133},{"ruleId":"278","severity":1,"message":"286","line":39,"column":70,"nodeType":"280","endLine":39,"endColumn":133},{"ruleId":"278","severity":1,"message":"287","line":40,"column":65,"nodeType":"280","endLine":40,"endColumn":115},{"ruleId":"278","severity":1,"message":"288","line":41,"column":72,"nodeType":"280","endLine":41,"endColumn":129},{"ruleId":"278","severity":1,"message":"289","line":14,"column":37,"nodeType":"280","endLine":14,"endColumn":51},{"ruleId":"278","severity":1,"message":"290","line":15,"column":37,"nodeType":"280","endLine":15,"endColumn":51},{"ruleId":"278","severity":1,"message":"291","line":16,"column":40,"nodeType":"280","endLine":16,"endColumn":58},{"ruleId":"278","severity":1,"message":"292","line":17,"column":40,"nodeType":"280","endLine":17,"endColumn":57},{"ruleId":"256","severity":1,"message":"293","line":58,"column":8,"nodeType":"258","endLine":58,"endColumn":10,"suggestions":"294"},{"ruleId":"250","severity":1,"message":"295","line":1,"column":8,"nodeType":"252","messageId":"253","endLine":1,"endColumn":13},{"ruleId":"256","severity":1,"message":"296","line":17,"column":15,"nodeType":"248","endLine":27,"endColumn":6},{"ruleId":"297","severity":1,"message":"298","line":121,"column":44,"nodeType":"299","messageId":"300","endLine":121,"endColumn":46},{"ruleId":"250","severity":1,"message":"301","line":20,"column":11,"nodeType":"252","messageId":"253","endLine":20,"endColumn":26},{"ruleId":"250","severity":1,"message":"302","line":49,"column":7,"nodeType":"252","messageId":"253","endLine":49,"endColumn":19},{"ruleId":"303","severity":1,"message":"304","line":55,"column":19,"nodeType":"252","messageId":"305","endLine":55,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":58,"column":19,"nodeType":"252","messageId":"305","endLine":58,"endColumn":27},{"ruleId":"306","severity":1,"message":"307","line":36,"column":126,"nodeType":"308","endLine":36,"endColumn":141},{"ruleId":"306","severity":1,"message":"307","line":37,"column":136,"nodeType":"308","endLine":37,"endColumn":151},{"ruleId":"256","severity":1,"message":"309","line":47,"column":8,"nodeType":"258","endLine":47,"endColumn":42,"suggestions":"310"},{"ruleId":"256","severity":1,"message":"311","line":82,"column":8,"nodeType":"258","endLine":82,"endColumn":21,"suggestions":"312"},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'games', 'games', 'gamenum', 'games', 'games', 'games', 'games', 'games', 'games', 'games', 'games', 'gamenum'.","ArrowFunctionExpression","unsafeRefs","no-unused-vars","'store' is defined but never used.","Identifier","unusedVar",["313"],["314"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'black', 'max', and 'white'. Either include them or remove the dependency array.","ArrayExpression",["315"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'max' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tactics'. Either include it or remove the dependency array.",["316"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["317"],["318"],"React Hook useEffect has missing dependencies: 'Openings', 'blunders', 'inaccuracy', and 'mistakes'. Either include them or remove the dependency array.",["319"],"React Hook useEffect has missing dependencies: 'blunder', 'inaccuracy', and 'mistake'. Either include them or remove the dependency array.",["320"],"React Hook useEffect has missing dependencies: 'blunders', 'inaccuracy', and 'mistakes'. Either include them or remove the dependency array.",["321"],"react/jsx-pascal-case","Imported JSX component Game_Pie_Loss must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Game_Pie_Results must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Game_Scatter_CAPS must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Game_Histogram_CAPS must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Move_Histogram_Ply must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Move_Histogram_Time must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Opening_Data must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Tactics_Barchart must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Tactics_Barchart_Phases must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Table_Game must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Table_Move must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Table_Openings must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Table_Tactics must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'modalID'. Either include it or remove the dependency array.",["322"],"'React' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'resetValidation' is assigned a value but never used.","'testLoggedIn' is assigned a value but never used.","no-const-assign","'loggedIn' is constant.","const","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'maxGames'. Either include it or remove the dependency array.",["323"],"React Hook useEffect has a missing dependency: 'logs'. Either include it or remove the dependency array.",["324"],"no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"327","fix":"329"},{"desc":"327","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"Update the dependencies array to be: [black, max, white]",{"range":"343","text":"344"},"Update the dependencies array to be: [tactics]",{"range":"345","text":"346"},{"range":"347","text":"346"},{"range":"348","text":"346"},"Update the dependencies array to be: [Games, Openings, blunders, inaccuracy, mistakes]",{"range":"349","text":"350"},"Update the dependencies array to be: [blunder, inaccuracy, mistake, openings]",{"range":"351","text":"352"},"Update the dependencies array to be: [blunders, inaccuracy, mistakes]",{"range":"353","text":"354"},"Update the dependencies array to be: [modalID]",{"range":"355","text":"356"},"Update the dependencies array to be: [receivedGameData, failedGameData, maxGames]",{"range":"357","text":"358"},"Update the dependencies array to be: [logs, logs.length]",{"range":"359","text":"360"},[2209,2211],"[black, max, white]",[1589,1591],"[tactics]",[1443,1445],[1367,1369],[1749,1756],"[Games, Openings, blunders, inaccuracy, mistakes]",[2361,2371],"[blunder, inaccuracy, mistake, openings]",[3329,3331],"[blunders, inaccuracy, mistakes]",[1896,1898],"[modalID]",[1414,1448],"[receivedGameData, failedGameData, maxGames]",[2499,2512],"[logs, logs.length]"]