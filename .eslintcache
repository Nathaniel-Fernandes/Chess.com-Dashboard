[{"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\index.js":"1","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\App.js":"2","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\Initialize.js":"3","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\State\\store.js":"4","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\urls.js":"5","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\helpers.js":"6","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\LoadForm.js":"7","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\Analyze.js":"8","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\AnalyzeHelpers.js":"9","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\AnalysisMetrics.js":"10"},{"size":235,"mtime":1607466474208,"results":"11","hashOfConfig":"12"},{"size":752,"mtime":1607637694398,"results":"13","hashOfConfig":"12"},{"size":2918,"mtime":1607664233607,"results":"14","hashOfConfig":"12"},{"size":1722,"mtime":1607660611850,"results":"15","hashOfConfig":"12"},{"size":579,"mtime":1607554564394,"results":"16","hashOfConfig":"12"},{"size":1935,"mtime":1607664211548,"results":"17","hashOfConfig":"12"},{"size":450,"mtime":1607486841061,"results":"18","hashOfConfig":"12"},{"size":601,"mtime":1607664371422,"results":"19","hashOfConfig":"12"},{"size":5869,"mtime":1607705123995,"results":"20","hashOfConfig":"12"},{"size":3757,"mtime":1607705110513,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"gju65z",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\index.js",["49"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'jotai'\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n",["50","51"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\App.js",["52"],"import React, { useEffect } from 'react';\nimport { initializeState } from \"./BusinessLogic/Initialize\";\nimport LoadForm from './components/LoadForm';\nimport { store } from './State/store';\n\nfunction App() {\n\tuseEffect(() => {\n\t\t// load initial state\n\t\tinitializeState();\n\n\t}, [])\n\t\n\tconst archive = store(state => state.GameArchive);\n\tconst gameID_arr = store(state => state.Games);\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n      </header>\n\t\t\n\t\t{/* <LoadForm /> */}\n\n\t\t<p>{(store.getState().loading) ? \"Loading\" : \"View\"}</p>\n\t\t<ol>\n\t\t\t{archive.map(\n\t\t\t\t(e) => <li>{e}</li>\n\t\t\t)}\n\t\t</ol>\n\t\t<br />\n\t\t<ol>\n\t\t\t{gameID_arr.map(\n\t\t\t\t(e) => <li>{e.id}</li>\n\t\t\t)}\n\t\t</ol>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\Initialize.js",["53","54"],"import { store } from '../State/store';\r\nimport { ArchiveURL } from './urls';\r\nimport { \r\n\tColorfromGame, \r\n\tCreateURL, \r\n\tGetURL, \r\n\tIDfromURL, \r\n\tResultFromGame, \r\n\tTimeControlFromGame, \r\n\tTimeClassFromGame,\r\n\tDateFromGame } from './helpers';\r\nimport { Analyze, AnalyzeGame } from '../BusinessLogic/Analyze';\r\n\r\n\r\nexport const initializeState = () => {\r\n\t// check if less then 100 games\r\n\tif (store.getState().Games.length < 100) {\r\n\r\n        GetURL(CreateURL(ArchiveURL, store.getState().UserName))\r\n\t\t\t.then((res, err) => {\r\n\t\t\t\t\t// primitive error handling\r\n\t\t\t\t\tif(err) { console.warn(err); return; }\r\n\t\t\t\t\telse if(res.data.status === 404) return;\r\n\r\n\t\t\t\t\tstore.getState().setGameArchives(res.data.archives)\t\t// think a synchronous call to update Archives\r\n\t\t\t\t\tconsole.log(store.getState().GameArchive)\t\t\t\t// prints out updated state\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn GameIDfromArchive();\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\t// for(let i = 0; i < 10; i++) {\r\n\t\t\t\t\t// AnalyzeGame(store.getState().Games[1]);\r\n\t\t\t\t\t// AnalyzeGame(store.getState().Games[2]);\r\n\t\t\t\t\tAnalyzeGame(store.getState().Games[0]);\r\n\t\t\t\t// }\r\n\t\t\t}) \r\n\t}\r\n}\r\n\r\n/**\r\n * @description Adds the GameIDs to GameID array from the archive\r\n * @returns {void} A promise  \r\n * @todo don't hardcode # of games\r\n */\r\nconst GameIDfromArchive = async () => {\r\n\t\tconsole.log(\"Current Store: \", store.getState())\r\n\t\tlet archives = store.getState().GameArchive;\r\n\t\tlet i = archives.length - 1;\r\n\t\tlet gamenum = store.getState().Games.length;\r\n\t\tlet games;\r\n\r\n\t\t// TESTS\r\n\t\t// 1. <100 games\r\n\t\t// 2. >100 games\r\n\t\t// 3. multiple archives\r\n\t\t// (async _ => {\r\n\t\t\twhile(archives[i] && i >= 0 && gamenum <= 100) { \r\n\t\t\t\tconsole.log(\"GM top loop: \", gamenum)\t\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(archives[i])\r\n\r\n\t\t\t\tawait GetURL(archives[i])\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t//  console.log(res.data)\r\n\t\t\t\t\t\tgames = res.data.games\r\n\r\n\t\t\t\t\t\t//  console.log(games.length)\r\n\r\n\t\t\t\t\t\tfor(let j = 0; j < games.length; j++) {\r\n\t\t\t\t\t\t\t// validation\r\n\t\t\t\t\t\t\tif(gamenum > 100) {\tbreak;\t}\t// break if exceed limit. In future not hardcode\r\n\t\t\t\t\t\t\tif(games[j].rules !== \"chess\") { continue; } // check if rules are chess or variant\r\n\r\n\t\t\t\t\t\t\tconst id = IDfromURL(games[j].url);\r\n\t\t\t\t\t\t\tconst color = ColorfromGame(games[j], store.getState().UserName);\r\n\t\t\t\t\t\t\tconst result = ResultFromGame(games[j], color);\r\n\t\t\t\t\t\t\tconst tc = TimeControlFromGame(games[j]);\r\n\t\t\t\t\t\t\tconst tclass = TimeClassFromGame(games[j]);\r\n\t\t\t\t\t\t\tconst date = DateFromGame(games[j]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (!store.getState().Games.includes(id)) { \t// could implement binarysearch in the future\r\n\t\t\t\t\t\t\t\tstore.getState().AddGame(id, color, result, tc, tclass, date);\r\n\t\t\t\t\t\t\t\tgamenum += 1;\r\n\t\t\t\t\t\t\t\tstore.getState().SetNeedAnalysis();\t// performance optim: only do once\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// console.log(\"GN in loop: \", gamenum)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\ti--;\t\r\n\t\t\t}\r\n\t\t\tconsole.log(\"gameids state: \", store.getState().Games)\r\n\r\n\t\t// Analyze();\r\n}","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\State\\store.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\urls.js",[],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\helpers.js",["55","56","57"],"import axios from \"axios\";\r\n\r\n/**\r\n * @param {string} url the incomplete url\r\n * @param {string | number} replacement the replacement to fill the url\r\n * @returns {string} the completed url\r\n */\r\nexport const CreateURL = (url, replacement) => {\r\n\treturn url.replace(\"{}\", replacement);\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} url The URL to get a response from\r\n * @returns {promise} Promise with requested url\r\n */\r\nexport const GetURL = async (url) => {\r\n\treturn axios.get(url);\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} url The URL with a Game ID in it \r\n * @returns {number} The game id\r\n * @throws Error if too many matches (!= 1)\r\n */\r\nexport const IDfromURL = (url) => {\r\n\tconst id = url.match(/\\d{1,13}/g)\r\n\r\n\tif(id.length !== 1) {\r\n\t\tthrow {\r\n\t\t\tmessage: \"IDfromURL to many matches\",\r\n\t\t\tobj: id\r\n\t\t} \r\n\t}\r\n\r\n\treturn Number(id[0])\r\n}\r\n\r\n/**\r\n * @param {string} username the players username\r\n * @param {object} gameObj The game object of a game\r\n */\r\nexport const ColorfromGame = (gameObj, uname) => {\r\n\tif(uname === gameObj.white.username) {\r\n\t\treturn \"white\";\r\n\t}\r\n\r\n\telse if(uname === gameObj.black.username) {\r\n\t\treturn \"black\";\r\n\t}\r\n\r\n\telse {\r\n\t\tthrow {\r\n\t\t\tmessage: \"Cannot find username in game. Perhaps this is the wrong game ID\",\r\n\t\t\tusername: uname,\r\n\t\t\twhite: gameObj.white.username,\r\n\t\t\tblack: gameObj.black.username\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const TimeControlFromGame = (gameObj) => {\r\n\treturn gameObj.time_control;\r\n}\r\n\r\nexport const TimeClassFromGame = (gameObj) => {\r\n\treturn gameObj.time_class;\r\n}\r\n\r\nexport const DateFromGame = (gameObj) => {\r\n\treturn gameObj.end_time;\r\n}\r\n\r\n/**\r\n * \r\n * @param {object} gameObj the game object of a game\r\n * @param {string} color the player's color\r\n */\r\nexport const ResultFromGame = (gameObj, color) => {\r\n\t// console.log(color)\r\n\tif(color !== \"white\" && color !== \"black\") {\r\n\t\tthrow {\r\n\t\t\tmessage: \"Not a valid color\",\r\n\t\t\tcolor: color\r\n\t\t}\r\n\t}\r\n\r\n\treturn gameObj[color].result;\r\n}\r\n\r\n","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\components\\LoadForm.js",["58"],"import React, { useState } from 'react';\r\nimport { store } from '../State/store';\r\n\r\nconst LoadForm = () => {\r\n    const [uname, setUname] = useState(\"\");\r\n\r\n    <form>\r\n        <input \r\n            type=\"text\" \r\n            value={uname} \r\n            onChange ={(e) => setUname(e.targe.value)} \r\n            placeholder=\"Player Name\" \r\n            name=\"username\"></input>\r\n        <button>Submit</button>\r\n\t</form>\r\n}\r\n\r\nexport default LoadForm;\r\n","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\Analyze.js",["59"],"import { getGameData, ValidGameID } from './AnalyzeHelpers';\r\nimport { store } from '../State/store';\r\nimport { AnalyzeBlunders, AnalyzeCastle, AnalyzeOpenings } from './AnalysisMetrics';\r\n\r\n/**\r\n * @description Analyzes the games\r\n * @param {string|number} id The id of the game to analyze\r\n */\r\nexport const AnalyzeGame = async (game) => {  \r\n    // function input validation\r\n    ValidGameID(game.id);\r\n\r\n    const data = await getGameData(game.id);\r\n    console.log(\"game: \", game)\r\n\r\n    AnalyzeCastle(data, game);\r\n    AnalyzeOpenings(data, game);\r\n    AnalyzeBlunders(data,game);\r\n    \r\n}\r\n\r\n\r\n","C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\AnalyzeHelpers.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73"],"C:\\Users\\Merlin\\Documents\\Coding\\ChessIntellect\\chess-dashboard\\src\\BusinessLogic\\AnalysisMetrics.js",["74"],{"ruleId":"75","severity":1,"message":"76","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":18},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"83","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":16},{"ruleId":"75","severity":1,"message":"84","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":63,"column":12,"nodeType":"87","messageId":"88","endLine":88,"endColumn":7},{"ruleId":"89","severity":1,"message":"90","line":31,"column":3,"nodeType":"91","messageId":"92","endLine":34,"endColumn":4},{"ruleId":"89","severity":1,"message":"90","line":54,"column":3,"nodeType":"91","messageId":"92","endLine":59,"endColumn":4},{"ruleId":"89","severity":1,"message":"90","line":83,"column":3,"nodeType":"91","messageId":"92","endLine":86,"endColumn":4},{"ruleId":"75","severity":1,"message":"93","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":15},{"ruleId":"75","severity":1,"message":"93","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":14,"column":9,"nodeType":"91","messageId":"92","endLine":18,"endColumn":10},{"ruleId":"94","severity":1,"message":"95","line":36,"column":86,"nodeType":"96","messageId":"97","endLine":36,"endColumn":87},{"ruleId":"89","severity":1,"message":"90","line":40,"column":25,"nodeType":"91","messageId":"92","endLine":43,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":74,"column":9,"nodeType":"91","messageId":"92","endLine":78,"endColumn":10},{"ruleId":"98","severity":1,"message":"99","line":102,"column":9,"nodeType":"100","messageId":"101","endLine":102,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":103,"column":9,"nodeType":"91","messageId":"92","endLine":107,"endColumn":10},{"ruleId":"98","severity":1,"message":"99","line":121,"column":8,"nodeType":"100","messageId":"101","endLine":121,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":122,"column":9,"nodeType":"91","messageId":"92","endLine":125,"endColumn":10},{"ruleId":"98","severity":1,"message":"99","line":147,"column":8,"nodeType":"100","messageId":"101","endLine":147,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":147,"column":23,"nodeType":"100","messageId":"101","endLine":147,"endColumn":36},{"ruleId":"89","severity":1,"message":"90","line":148,"column":9,"nodeType":"91","messageId":"92","endLine":152,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":154,"column":9,"nodeType":"91","messageId":"92","endLine":158,"endColumn":10},{"ruleId":"98","severity":1,"message":"99","line":198,"column":8,"nodeType":"100","messageId":"101","endLine":198,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":199,"column":9,"nodeType":"91","messageId":"92","endLine":203,"endColumn":10},{"ruleId":"102","severity":1,"message":"103","line":35,"column":19,"nodeType":"100","messageId":"104","endLine":35,"endColumn":21},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'LoadForm' is defined but never used.","'Analyze' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'games', 'games', 'gamenum', 'games', 'games', 'games', 'games', 'games', 'games', 'games', 'gamenum'.","ArrowFunctionExpression","unsafeRefs","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'store' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","no-global-assign","no-unsafe-negation"]